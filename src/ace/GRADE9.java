
package ace;


import ace.LogIn;
import ace.SignUp;
import ace.smthsmtj;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import ace.DatabaseConnection;
import ace.GlobalClass;
import java.beans.Statement;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Connection;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import javax.swing.Icon;

/**
 *
 * @author AykAyz
 */
public class GRADE9 extends javax.swing.JFrame {
    
    private DefaultTableModel tableModel;
    private final String[] assessmentTypes = {"FORMATIVE", "ALTERNATIVE", "EXAM"};
    
    boolean a = false;
    public GRADE9() {
        setExtendedState(JFrame.MAXIMIZED_BOTH);    
        initComponents();
        assessmentTable.setVisible(false);
        menu.setVisible(true);
              
    }
    
    
    private void setupTable() {
        assessmentTable.setVisible(true);    
        tableModel = (DefaultTableModel) assessmentTable.getModel();
        
        while (tableModel.getRowCount() > 0) {
            tableModel.removeRow(0);
        }
        
        for (int i = 0; i < 5; i++) {
            addEmptyRow();
        }
        
        
        
       
        assessmentTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, 
                    boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(
                        table, value, isSelected, hasFocus, row, column);
                
                if (row % 2 == 0) {
                    c.setBackground(new Color(240, 240, 240));
                } else {
                    c.setBackground(Color.WHITE);
                }
                
                if (column % 2 == 0) {
                    if (c.getBackground().equals(Color.WHITE)) {
                        c.setBackground(new Color(245, 245, 255));
                    } else {
                        c.setBackground(new Color(235, 235, 245));
                    }
                }
                
                if (isSelected) {
                    c.setBackground(new Color(184, 207, 229));
                }
                
                setHorizontalAlignment(JLabel.CENTER);
                return c;
            }
        });
        
        
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane23 = new javax.swing.JScrollPane();
        progressTable2 = new javax.swing.JTable();
        menu = new javax.swing.JPanel();
        menuIcon = new javax.swing.JPanel();
        hidemenu = new javax.swing.JPanel();
        btnHidemenu = new javax.swing.JLabel();
        menuHide = new javax.swing.JPanel();
        pfp = new javax.swing.JPanel();
        SUB = new javax.swing.JLabel();
        separator = new javax.swing.JPanel();
        sub1 = new javax.swing.JPanel();
        sub12 = new javax.swing.JPanel();
        menuSub2 = new javax.swing.JLabel();
        sub2 = new javax.swing.JPanel();
        menuSub3 = new javax.swing.JLabel();
        sub3 = new javax.swing.JPanel();
        menuSub4 = new javax.swing.JLabel();
        sub4 = new javax.swing.JPanel();
        menuSub5 = new javax.swing.JLabel();
        sub5 = new javax.swing.JPanel();
        menuSub6 = new javax.swing.JLabel();
        sub6 = new javax.swing.JPanel();
        menuSub7 = new javax.swing.JLabel();
        sub7 = new javax.swing.JPanel();
        menuSub8 = new javax.swing.JLabel();
        sub8 = new javax.swing.JPanel();
        menuSub9 = new javax.swing.JLabel();
        sub9 = new javax.swing.JPanel();
        menuSub10 = new javax.swing.JLabel();
        sub10 = new javax.swing.JPanel();
        menuSub11 = new javax.swing.JLabel();
        sub0 = new javax.swing.JPanel();
        menuSub1 = new javax.swing.JLabel();
        dashboard = new javax.swing.JPanel();
        buttons = new javax.swing.JPanel();
        homepage = new javax.swing.JPanel();
        btnHomepage = new javax.swing.JLabel();
        inputpage = new javax.swing.JPanel();
        btnInputpage = new javax.swing.JLabel();
        progresspage = new javax.swing.JPanel();
        btnProgresspage = new javax.swing.JLabel();
        finalpage = new javax.swing.JPanel();
        btnFinalpage = new javax.swing.JLabel();
        content = new javax.swing.JPanel();
        homepageScreen = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel34 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTextArea8 = new javax.swing.JTextArea();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTextArea9 = new javax.swing.JTextArea();
        jScrollPane20 = new javax.swing.JScrollPane();
        jTextArea10 = new javax.swing.JTextArea();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTextArea11 = new javax.swing.JTextArea();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        inputpageScreen = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        inputscreen2 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        mainPanel2 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        assessmentTable = new javax.swing.JTable();
        jLabel28 = new javax.swing.JLabel();
        subjectComboBox = new javax.swing.JComboBox<>();
        buttonPanel2 = new javax.swing.JPanel();
        addRowButton = new javax.swing.JButton();
        calculateButton = new javax.swing.JButton();
        calculateGradeLabel = new javax.swing.JLabel();
        CLEAR = new javax.swing.JButton();
        SAVE = new javax.swing.JButton();
        progresspageScreen = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pie = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        TGWA = new javax.swing.JTextField();
        GWAB1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        PGWA = new javax.swing.JTextField();
        VALED = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        LOAD = new javax.swing.JButton();
        CLEARDATA = new javax.swing.JButton();
        GWA = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        progressTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        DL = new javax.swing.JPanel();
        DLA = new javax.swing.JTextField();
        GWAB = new javax.swing.JButton();
        finalpageScreen = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        LOGOUT = new javax.swing.JButton();
        create = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jPanel12.setPreferredSize(new java.awt.Dimension(0, 150));

        progressTable2.setFont(new java.awt.Font("Constantia", 0, 17)); // NOI18N
        progressTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Integrated Science", null},
                {"Mathematics", null},
                {"English", null},
                {"Filipino", null},
                {"Social Science", null},
                {"PEHM", null},
                {"VALED", ""},
                {"ADTech", null},
                {"Computer Science", null}
            },
            new String [] {
                "SUBJECT", "GRADE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        progressTable2.setToolTipText("");
        jScrollPane23.setViewportView(progressTable2);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane23)
                .addGap(27, 27, 27))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 102));

        menu.setBackground(new java.awt.Color(0, 153, 102));
        menu.setPreferredSize(new java.awt.Dimension(85, 300));
        menu.setLayout(new java.awt.BorderLayout());

        menuIcon.setBackground(new java.awt.Color(153, 0, 0));
        menuIcon.setPreferredSize(new java.awt.Dimension(85, 300));
        menuIcon.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hidemenu.setBackground(new java.awt.Color(153, 0, 0));

        btnHidemenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnHidemenu.setText("|||");
        btnHidemenu.setPreferredSize(new java.awt.Dimension(41, 41));
        btnHidemenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHidemenuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHidemenuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHidemenuMouseExited(evt);
            }
        });

        javax.swing.GroupLayout hidemenuLayout = new javax.swing.GroupLayout(hidemenu);
        hidemenu.setLayout(hidemenuLayout);
        hidemenuLayout.setHorizontalGroup(
            hidemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hidemenuLayout.createSequentialGroup()
                .addComponent(btnHidemenu, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        hidemenuLayout.setVerticalGroup(
            hidemenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnHidemenu, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
        );

        menuIcon.add(hidemenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 80));

        menu.add(menuIcon, java.awt.BorderLayout.LINE_END);

        menuHide.setBackground(new java.awt.Color(153, 0, 0));

        pfp.setBackground(new java.awt.Color(204, 204, 255));
        pfp.setPreferredSize(new java.awt.Dimension(40, 40));

        javax.swing.GroupLayout pfpLayout = new javax.swing.GroupLayout(pfp);
        pfp.setLayout(pfpLayout);
        pfpLayout.setHorizontalGroup(
            pfpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        pfpLayout.setVerticalGroup(
            pfpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        SUB.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 18)); // NOI18N
        SUB.setText("GRADE 8");
        SUB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SUBMouseClicked(evt);
            }
        });

        separator.setBackground(new java.awt.Color(0, 0, 0));

        sub1.setBackground(new java.awt.Color(153, 0, 0));
        sub1.setPreferredSize(new java.awt.Dimension(240, 60));
        sub1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sub1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                sub1MouseExited(evt);
            }
        });

        sub12.setBackground(new java.awt.Color(153, 0, 0));
        sub12.setPreferredSize(new java.awt.Dimension(240, 60));
        sub12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sub12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                sub12MouseExited(evt);
            }
        });

        javax.swing.GroupLayout sub12Layout = new javax.swing.GroupLayout(sub12);
        sub12.setLayout(sub12Layout);
        sub12Layout.setHorizontalGroup(
            sub12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        sub12Layout.setVerticalGroup(
            sub12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 42, Short.MAX_VALUE)
        );

        menuSub2.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        menuSub2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuSub2.setText("MATH 2");
        menuSub2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSub2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuSub2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuSub2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout sub1Layout = new javax.swing.GroupLayout(sub1);
        sub1.setLayout(sub1Layout);
        sub1Layout.setHorizontalGroup(
            sub1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sub1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(sub12, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(menuSub2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sub1Layout.setVerticalGroup(
            sub1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sub1Layout.createSequentialGroup()
                .addComponent(menuSub2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sub12, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sub2.setBackground(new java.awt.Color(153, 0, 0));
        sub2.setPreferredSize(new java.awt.Dimension(240, 60));

        menuSub3.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        menuSub3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuSub3.setText("ENGLISH 2");
        menuSub3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSub3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuSub3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuSub3MouseExited(evt);
            }
        });

        javax.swing.GroupLayout sub2Layout = new javax.swing.GroupLayout(sub2);
        sub2.setLayout(sub2Layout);
        sub2Layout.setHorizontalGroup(
            sub2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sub2Layout.setVerticalGroup(
            sub2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        sub3.setBackground(new java.awt.Color(153, 0, 0));
        sub3.setPreferredSize(new java.awt.Dimension(240, 60));

        menuSub4.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        menuSub4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuSub4.setText("FILIPINO 2");
        menuSub4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSub4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuSub4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuSub4MouseExited(evt);
            }
        });

        javax.swing.GroupLayout sub3Layout = new javax.swing.GroupLayout(sub3);
        sub3.setLayout(sub3Layout);
        sub3Layout.setHorizontalGroup(
            sub3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sub3Layout.setVerticalGroup(
            sub3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub4, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        sub4.setBackground(new java.awt.Color(153, 0, 0));
        sub4.setPreferredSize(new java.awt.Dimension(240, 60));

        menuSub5.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        menuSub5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuSub5.setText("SOC.SCI. 2");
        menuSub5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSub5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuSub5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuSub5MouseExited(evt);
            }
        });

        javax.swing.GroupLayout sub4Layout = new javax.swing.GroupLayout(sub4);
        sub4.setLayout(sub4Layout);
        sub4Layout.setHorizontalGroup(
            sub4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sub4Layout.setVerticalGroup(
            sub4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub5, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        sub5.setBackground(new java.awt.Color(153, 0, 0));
        sub5.setPreferredSize(new java.awt.Dimension(240, 60));

        menuSub6.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        menuSub6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuSub6.setText("PEHM 2");
        menuSub6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSub6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuSub6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuSub6MouseExited(evt);
            }
        });

        javax.swing.GroupLayout sub5Layout = new javax.swing.GroupLayout(sub5);
        sub5.setLayout(sub5Layout);
        sub5Layout.setHorizontalGroup(
            sub5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sub5Layout.setVerticalGroup(
            sub5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub6, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        sub6.setBackground(new java.awt.Color(153, 0, 0));
        sub6.setPreferredSize(new java.awt.Dimension(240, 60));

        menuSub7.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        menuSub7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuSub7.setText("VALED 2");
        menuSub7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSub7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuSub7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuSub7MouseExited(evt);
            }
        });

        javax.swing.GroupLayout sub6Layout = new javax.swing.GroupLayout(sub6);
        sub6.setLayout(sub6Layout);
        sub6Layout.setHorizontalGroup(
            sub6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sub6Layout.setVerticalGroup(
            sub6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub7, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        sub7.setBackground(new java.awt.Color(153, 0, 0));
        sub7.setPreferredSize(new java.awt.Dimension(240, 60));

        menuSub8.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        menuSub8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuSub8.setText("ADTECH 2");
        menuSub8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSub8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuSub8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuSub8MouseExited(evt);
            }
        });

        javax.swing.GroupLayout sub7Layout = new javax.swing.GroupLayout(sub7);
        sub7.setLayout(sub7Layout);
        sub7Layout.setHorizontalGroup(
            sub7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sub7Layout.setVerticalGroup(
            sub7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub8, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        sub8.setBackground(new java.awt.Color(153, 0, 0));
        sub8.setPreferredSize(new java.awt.Dimension(240, 60));

        menuSub9.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        menuSub9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuSub9.setText("COMP.SCI. 2");
        menuSub9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSub9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuSub9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuSub9MouseExited(evt);
            }
        });

        javax.swing.GroupLayout sub8Layout = new javax.swing.GroupLayout(sub8);
        sub8.setLayout(sub8Layout);
        sub8Layout.setHorizontalGroup(
            sub8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sub8Layout.setVerticalGroup(
            sub8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub9, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        sub9.setBackground(new java.awt.Color(153, 0, 0));
        sub9.setPreferredSize(new java.awt.Dimension(240, 60));

        menuSub10.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        menuSub10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuSub10.setText("EARTH.SCI.");
        menuSub10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSub10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuSub10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuSub10MouseExited(evt);
            }
        });

        javax.swing.GroupLayout sub9Layout = new javax.swing.GroupLayout(sub9);
        sub9.setLayout(sub9Layout);
        sub9Layout.setHorizontalGroup(
            sub9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sub9Layout.setVerticalGroup(
            sub9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub10, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        sub10.setBackground(new java.awt.Color(153, 0, 0));
        sub10.setPreferredSize(new java.awt.Dimension(240, 60));

        menuSub11.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        menuSub11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuSub11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSub11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout sub10Layout = new javax.swing.GroupLayout(sub10);
        sub10.setLayout(sub10Layout);
        sub10Layout.setHorizontalGroup(
            sub10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sub10Layout.setVerticalGroup(
            sub10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSub11, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        sub0.setBackground(new java.awt.Color(153, 0, 0));

        menuSub1.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        menuSub1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuSub1.setText("INT.SCI. 2");
        menuSub1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuSub1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuSub1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuSub1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout sub0Layout = new javax.swing.GroupLayout(sub0);
        sub0.setLayout(sub0Layout);
        sub0Layout.setHorizontalGroup(
            sub0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sub0Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menuSub1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        sub0Layout.setVerticalGroup(
            sub0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sub0Layout.createSequentialGroup()
                .addComponent(menuSub1, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout separatorLayout = new javax.swing.GroupLayout(separator);
        separator.setLayout(separatorLayout);
        separatorLayout.setHorizontalGroup(
            separatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sub3, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(sub4, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(sub5, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(sub6, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(sub7, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(sub8, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(sub9, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(sub10, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(sub0, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sub1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(sub2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
        );
        separatorLayout.setVerticalGroup(
            separatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(separatorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sub0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sub1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sub2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sub3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sub4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sub5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sub6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sub7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sub8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sub9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sub10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout menuHideLayout = new javax.swing.GroupLayout(menuHide);
        menuHide.setLayout(menuHideLayout);
        menuHideLayout.setHorizontalGroup(
            menuHideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuHideLayout.createSequentialGroup()
                .addGroup(menuHideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuHideLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(pfp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SUB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(31, 31, 31))
                    .addGroup(menuHideLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(separator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(8, 8, 8))
        );
        menuHideLayout.setVerticalGroup(
            menuHideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuHideLayout.createSequentialGroup()
                .addGroup(menuHideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuHideLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(pfp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(menuHideLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(SUB)))
                .addGap(30, 30, 30)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menu.add(menuHide, java.awt.BorderLayout.CENTER);

        getContentPane().add(menu, java.awt.BorderLayout.LINE_START);

        dashboard.setBackground(new java.awt.Color(51, 51, 51));
        dashboard.setLayout(new java.awt.BorderLayout());

        buttons.setBackground(new java.awt.Color(130, 130, 130));

        homepage.setBackground(new java.awt.Color(194, 194, 194));

        btnHomepage.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 20)); // NOI18N
        btnHomepage.setForeground(new java.awt.Color(57, 53, 54));
        btnHomepage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnHomepage.setText("Home");
        btnHomepage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHomepageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHomepageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHomepageMouseExited(evt);
            }
        });

        javax.swing.GroupLayout homepageLayout = new javax.swing.GroupLayout(homepage);
        homepage.setLayout(homepageLayout);
        homepageLayout.setHorizontalGroup(
            homepageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homepageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHomepage, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                .addContainerGap())
        );
        homepageLayout.setVerticalGroup(
            homepageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homepageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHomepage, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        inputpage.setBackground(new java.awt.Color(194, 194, 194));

        btnInputpage.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 20)); // NOI18N
        btnInputpage.setForeground(new java.awt.Color(57, 53, 54));
        btnInputpage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnInputpage.setText("Input");
        btnInputpage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInputpageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnInputpageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInputpageMouseExited(evt);
            }
        });

        javax.swing.GroupLayout inputpageLayout = new javax.swing.GroupLayout(inputpage);
        inputpage.setLayout(inputpageLayout);
        inputpageLayout.setHorizontalGroup(
            inputpageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputpageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnInputpage, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );
        inputpageLayout.setVerticalGroup(
            inputpageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputpageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnInputpage, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        progresspage.setBackground(new java.awt.Color(194, 194, 194));

        btnProgresspage.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 20)); // NOI18N
        btnProgresspage.setForeground(new java.awt.Color(57, 53, 54));
        btnProgresspage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnProgresspage.setText("Progress");
        btnProgresspage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnProgresspageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnProgresspageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnProgresspageMouseExited(evt);
            }
        });

        javax.swing.GroupLayout progresspageLayout = new javax.swing.GroupLayout(progresspage);
        progresspage.setLayout(progresspageLayout);
        progresspageLayout.setHorizontalGroup(
            progresspageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progresspageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnProgresspage, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addContainerGap())
        );
        progresspageLayout.setVerticalGroup(
            progresspageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progresspageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnProgresspage, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        finalpage.setBackground(new java.awt.Color(194, 194, 194));

        btnFinalpage.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 20)); // NOI18N
        btnFinalpage.setForeground(new java.awt.Color(57, 53, 54));
        btnFinalpage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnFinalpage.setText("Final");
        btnFinalpage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFinalpageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnFinalpageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnFinalpageMouseExited(evt);
            }
        });

        javax.swing.GroupLayout finalpageLayout = new javax.swing.GroupLayout(finalpage);
        finalpage.setLayout(finalpageLayout);
        finalpageLayout.setHorizontalGroup(
            finalpageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finalpageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFinalpage, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );
        finalpageLayout.setVerticalGroup(
            finalpageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finalpageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFinalpage, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout buttonsLayout = new javax.swing.GroupLayout(buttons);
        buttons.setLayout(buttonsLayout);
        buttonsLayout.setHorizontalGroup(
            buttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsLayout.createSequentialGroup()
                .addComponent(homepage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputpage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progresspage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(finalpage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        buttonsLayout.setVerticalGroup(
            buttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(buttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(homepage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputpage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(progresspage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(finalpage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        dashboard.add(buttons, java.awt.BorderLayout.PAGE_END);

        content.setBackground(new java.awt.Color(255, 255, 255));
        content.setLayout(new java.awt.CardLayout());

        homepageScreen.setBackground(new java.awt.Color(0, 0, 0));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(1224, 1356));

        jPanel34.setBackground(new java.awt.Color(57, 53, 54));
        jPanel34.setPreferredSize(new java.awt.Dimension(805, 2400));

        jLabel31.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("A.C.E. WELCOMES YOU BACK!");

        jSeparator5.setBackground(new java.awt.Color(130, 130, 130));
        jSeparator5.setForeground(new java.awt.Color(130, 130, 130));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Intermediate Algebra reinforces the basic concepts of Math 1 on operations, rational expressions, equations, inequalities and problem solving.  It introduces the concepts on the systems of linear equations in 2-3 variables, inequalities, radicals, relations and functions, linear functions, quadratic functions, absolute value functions, and real-life application of these functions which provide foundation in the relevance of math in the fields of science, technology and business.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane11.setViewportView(jTextArea1);

        jScrollPane12.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("Exploring and Understanding the Interconnections of Science is an integrated course that will cover content topics in Biology, Chemistry and Physics.  It introduces foundations of science principles, within the following themes or areas:  Laws and Theories Governing Science; Matter and Energy; Movements, Patterns and Trends; and Impact of Global Warming to Biodiversity.");
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane12.setViewportView(jTextArea2);

        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jTextArea3.setText("Physical Education 2 (PE 2) — PhysicalFitness and Basic Movement Education 2 focuses on preparing the Grade 8 students for active and successful participation in various physical activities by developing mastery over fundamental manipulative skills and developing adequate fitness level.\n\nHealth Education 2 (Health 2) — ME and my FRIENDS:  PreventiveDrug Education, Safety and First Aid focuses on safety, first aid, and preventive drug education.\n\nMusic 2 — Asian / African Music is the study of Asian/African music to better appreciate our immediate neighbors.  This includesthe music languages of several countries from South East Asia, Central Asia, South Asia, South West Asia, and Africa.  The course is also a review of fundamentals of music with added concepts related to the study of Asian and African music.\n\n ");
        jTextArea3.setWrapStyleWord(true);
        jTextArea3.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane13.setViewportView(jTextArea3);

        jTextArea4.setEditable(false);
        jTextArea4.setColumns(20);
        jTextArea4.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jTextArea4.setLineWrap(true);
        jTextArea4.setRows(5);
        jTextArea4.setText("Communication Arts 2 and Afro-Asian Literature primarily aims to enhance the students' proficiency in the five macro-skills and develop further their English communication ability.  In addition, it intends to expose and make students familiar with Asian and African literature in order to promote appreciation for Afro-Asian culture, as well as respect for and tolerance of cultural uniqueness and diversity.");
        jTextArea4.setWrapStyleWord(true);
        jTextArea4.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane14.setViewportView(jTextArea4);

        jTextArea5.setEditable(false);
        jTextArea5.setColumns(20);
        jTextArea5.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jTextArea5.setLineWrap(true);
        jTextArea5.setRows(5);
        jTextArea5.setText("Kasanayan sa Komunikasyon at Pagpapahalaga sa Noli me Tangere, Wika, Panitikan at Iba pang Anyo ay sumasaklaw sa kasanayan sa epektibong pakikipagtalastasan sa pamamagitan ng paglinang sa kasanayan sa epektibong pakikipagtalastasan sa pamamagitan ng paglinang sa mga makrong kasanayan tulad ng pakikinig, pagsasalita, pagbasa, pagsulat, at panonood.  Bibigyan ng tuon and pag-aral sa iba’t ibang akdang pampanitikan at pagpapahalaga sa akda ng dakilang bayani na si Dr. Jose Rizal, Noli Me Tangere, upang maitanim sa isipan ng mga mag-aaral ang simulain ng kalayaan at diwang nasyonalismo.  Gayundin, mabibigyan ng sapat na kasanayan at kamulatan ang mga mag-aaral sa pamamagitan ng mga kaalamang pangwika at pampanitikan upang maunawaan at mapahalagahan ang kanilang kultura na magsisilbing gabay sa pahubog ng kanilang katauhan at pagtugon sa mga hamon ng pagbabago sa lipunang kinabibilangan.");
        jTextArea5.setWrapStyleWord(true);
        jTextArea5.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane15.setViewportView(jTextArea5);

        jTextArea7.setEditable(false);
        jTextArea7.setColumns(20);
        jTextArea7.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jTextArea7.setLineWrap(true);
        jTextArea7.setRows(5);
        jTextArea7.setText(" An Introduction to the Design Process - Resistant Materials and Electronics (Application and Evaluation) subject introduces the student to resistant materials and electronics.  This project based course is geared towards attaining a practical knowledge of the common materials, tools, and processes used in technology.  The skills involved include the design, planning and construction of various items, and the continuous application of the design process from the identification and formulation of problems to the evaluation of finished products.  This year is blocked in 2 areas:  resistant materials and electronics, the goal is for each student to experience 3 to 8 design projects per year.  Since the projects will be graded according to variety of benchmarked goals, a project can extend into the next quarter.");
        jTextArea7.setWrapStyleWord(true);
        jTextArea7.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane17.setViewportView(jTextArea7);

        jTextArea8.setEditable(false);
        jTextArea8.setColumns(20);
        jTextArea8.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jTextArea8.setLineWrap(true);
        jTextArea8.setRows(5);
        jTextArea8.setText("World History 1 maps the progress of man from prehistory to the pre-medieval, emphasizing the origins of human civilization, the early civilizations, the emerging school of thoughts and ideas, and the early empires of the world.  World History 1 will also be discussed in the light of geography, politics, culture, and especially science and technology, providing our students with the vocabulary and perspectives necessary to analyze and articulate what they know and think of global dynamics, patterns of history, and social and economic change.\n\n ");
        jTextArea8.setWrapStyleWord(true);
        jTextArea8.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane18.setViewportView(jTextArea8);

        jTextArea9.setEditable(false);
        jTextArea9.setColumns(20);
        jTextArea9.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jTextArea9.setLineWrap(true);
        jTextArea9.setRows(5);
        jTextArea9.setText("Knowing the Whys and Wherefores:  Toward Adolescent Wholeness.  VE 2 concerns young persons as bearers of values. With a growing desire to build their lives in an expanding world, the students develop, through cours, self deliberation for rendering judgements and decisions on novel, complex, or consequential matters. The meaning or purpose in life is presented not as a choice to be made on the outset, but as an outcome of a process of search and discernment. The values emphasized in this course are: setting one’s life directions from keen observations and memories of events and circumstances; pursuing the good with a methodological approach, a sense of rightness, and a self-disciplined will; and seeking and protecting one’s well being and wholeness.");
        jTextArea9.setWrapStyleWord(true);
        jTextArea9.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane19.setViewportView(jTextArea9);

        jTextArea10.setEditable(false);
        jTextArea10.setColumns(20);
        jTextArea10.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jTextArea10.setLineWrap(true);
        jTextArea10.setRows(5);
        jTextArea10.setText("Introduction to Computational Thinking is a subject where students are trained to develop solutions using computers for real-life applications.  The focus is on developing program logic formulation skills through pseudo-coding, flowcharting, and procedural or structured programming using a programming language.");
        jTextArea10.setWrapStyleWord(true);
        jTextArea10.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane20.setViewportView(jTextArea10);

        jTextArea11.setEditable(false);
        jTextArea11.setColumns(20);
        jTextArea11.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 14)); // NOI18N
        jTextArea11.setLineWrap(true);
        jTextArea11.setRows(5);
        jTextArea11.setText("deals with the concepts and principles of various processes that have formed and continuously shape the Earth and the Universe.  Topics covered is to identify and explain the different processes (internal and external) that continuously shape the Earth, that have formed and affected the Philippine Islands, hazards of these Earth processes and come up with ways to mitigate and adapt to these said hazards and explain how the Solar System, the Stars and the Universe were formed.\n\n ");
        jTextArea11.setWrapStyleWord(true);
        jTextArea11.setMargin(new java.awt.Insets(10, 10, 10, 10));
        jScrollPane21.setViewportView(jTextArea11);

        jLabel32.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ace/INTEGRATEDSCIENCE.png"))); // NOI18N
        jLabel32.setMaximumSize(new java.awt.Dimension(240, 130));
        jLabel32.setMinimumSize(new java.awt.Dimension(240, 130));
        jLabel32.setPreferredSize(new java.awt.Dimension(240, 130));

        jLabel34.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ace/MATHEMATICS.png"))); // NOI18N
        jLabel34.setMaximumSize(new java.awt.Dimension(240, 130));
        jLabel34.setMinimumSize(new java.awt.Dimension(240, 130));
        jLabel34.setPreferredSize(new java.awt.Dimension(240, 130));

        jLabel35.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ace/ENGLISH.png"))); // NOI18N
        jLabel35.setMaximumSize(new java.awt.Dimension(240, 130));
        jLabel35.setMinimumSize(new java.awt.Dimension(240, 130));
        jLabel35.setPreferredSize(new java.awt.Dimension(240, 130));

        jLabel36.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ace/FILIPINO.png"))); // NOI18N
        jLabel36.setMaximumSize(new java.awt.Dimension(240, 130));
        jLabel36.setMinimumSize(new java.awt.Dimension(240, 130));
        jLabel36.setPreferredSize(new java.awt.Dimension(240, 130));

        jLabel37.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ace/SOCSCI.png"))); // NOI18N
        jLabel37.setMaximumSize(new java.awt.Dimension(240, 130));
        jLabel37.setMinimumSize(new java.awt.Dimension(240, 130));
        jLabel37.setPreferredSize(new java.awt.Dimension(240, 130));

        jLabel38.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ace/PEHM.png"))); // NOI18N
        jLabel38.setMaximumSize(new java.awt.Dimension(240, 130));
        jLabel38.setMinimumSize(new java.awt.Dimension(240, 130));
        jLabel38.setPreferredSize(new java.awt.Dimension(240, 130));

        jLabel39.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ace/VALED.png"))); // NOI18N
        jLabel39.setMaximumSize(new java.awt.Dimension(240, 130));
        jLabel39.setMinimumSize(new java.awt.Dimension(240, 130));
        jLabel39.setPreferredSize(new java.awt.Dimension(240, 130));

        jLabel40.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ace/ADTECH.png"))); // NOI18N
        jLabel40.setMaximumSize(new java.awt.Dimension(240, 130));
        jLabel40.setMinimumSize(new java.awt.Dimension(240, 130));
        jLabel40.setPreferredSize(new java.awt.Dimension(240, 130));

        jLabel41.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ace/CS.png"))); // NOI18N
        jLabel41.setMaximumSize(new java.awt.Dimension(240, 130));
        jLabel41.setMinimumSize(new java.awt.Dimension(240, 130));
        jLabel41.setPreferredSize(new java.awt.Dimension(240, 130));

        jLabel42.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ace/ES.png"))); // NOI18N
        jLabel42.setMaximumSize(new java.awt.Dimension(240, 130));
        jLabel42.setMinimumSize(new java.awt.Dimension(240, 130));
        jLabel42.setPreferredSize(new java.awt.Dimension(240, 130));

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                .addGap(260, 260, 260))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane15)
                            .addComponent(jScrollPane18)
                            .addComponent(jScrollPane13)
                            .addComponent(jScrollPane19)
                            .addComponent(jScrollPane17)
                            .addComponent(jScrollPane20)
                            .addComponent(jScrollPane21)
                            .addComponent(jScrollPane14)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane12)))
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jSeparator5)))
                .addGap(60, 60, 60))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)))
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)))
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel34);

        javax.swing.GroupLayout homepageScreenLayout = new javax.swing.GroupLayout(homepageScreen);
        homepageScreen.setLayout(homepageScreenLayout);
        homepageScreenLayout.setHorizontalGroup(
            homepageScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        homepageScreenLayout.setVerticalGroup(
            homepageScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1357, Short.MAX_VALUE)
        );

        content.add(homepageScreen, "card2");

        inputpageScreen.setBackground(new java.awt.Color(0, 0, 0));

        inputscreen2.setBackground(new java.awt.Color(57, 53, 54));
        inputscreen2.setPreferredSize(new java.awt.Dimension(752, 676));

        jLabel33.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 24)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("A.C.E. - ASSESS.CALCULATE.EXCEL");

        jSeparator6.setBackground(new java.awt.Color(130, 130, 130));
        jSeparator6.setForeground(new java.awt.Color(130, 130, 130));

        mainPanel2.setBackground(new java.awt.Color(153, 0, 0));

        assessmentTable.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 14)); // NOI18N
        assessmentTable.setForeground(new java.awt.Color(57, 53, 54));
        assessmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "FORMATIVE(score)", "FORMATIVE(total)", "ALTERNATIVE(score)", "ALTERNATIVE(total)", "EXAM(score)", "EXAM(total)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        assessmentTable.setToolTipText("");
        assessmentTable.setAutoscrolls(false);
        assessmentTable.setDropMode(javax.swing.DropMode.INSERT_ROWS);
        assessmentTable.setGridColor(new java.awt.Color(57, 53, 54));
        assessmentTable.setRowHeight(30);
        assessmentTable.setRowSelectionAllowed(false);
        assessmentTable.setSelectionForeground(new java.awt.Color(57, 53, 54));
        assessmentTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        assessmentTable.setShowGrid(true);
        jScrollPane8.setViewportView(assessmentTable);

        jLabel28.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("SUBJECT: ");

        subjectComboBox.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        subjectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "INTEGRATED SCIENCE", "MATH", "ENGLISH", "FILIPINO", "SOCIAL SCIENCE", "PEHM", "ADTECH", "COMPUTER SCIENCE", "EARTH SCIENCE" }));
        subjectComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectComboBoxActionPerformed(evt);
            }
        });

        buttonPanel2.setBackground(new java.awt.Color(153, 0, 0));

        addRowButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        addRowButton.setForeground(new java.awt.Color(153, 0, 0));
        addRowButton.setText("ADD ASSESSMENT");
        addRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRowButtonaddRowButtonActionPerformed(evt);
            }
        });

        calculateButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        calculateButton.setForeground(new java.awt.Color(153, 0, 0));
        calculateButton.setText("CALCULATE GRADE");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtoncalculateButtonActionPerformed(evt);
            }
        });

        calculateGradeLabel.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        calculateGradeLabel.setForeground(new java.awt.Color(255, 255, 255));
        calculateGradeLabel.setText("GRADE: ");

        CLEAR.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CLEAR.setForeground(new java.awt.Color(153, 0, 0));
        CLEAR.setText("CLEAR");
        CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEARCLEARActionPerformed(evt);
            }
        });

        SAVE.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        SAVE.setForeground(new java.awt.Color(153, 0, 0));
        SAVE.setText("SAVE");
        SAVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAVESAVEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanel2Layout = new javax.swing.GroupLayout(buttonPanel2);
        buttonPanel2.setLayout(buttonPanel2Layout);
        buttonPanel2Layout.setHorizontalGroup(
            buttonPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(buttonPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addRowButton, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(CLEAR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addGroup(buttonPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SAVE, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(calculateButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
                .addGap(15, 15, 15))
            .addGroup(buttonPanel2Layout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(calculateGradeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(238, 238, 238))
        );
        buttonPanel2Layout.setVerticalGroup(
            buttonPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(buttonPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(calculateGradeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(buttonPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CLEAR, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SAVE, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout mainPanel2Layout = new javax.swing.GroupLayout(mainPanel2);
        mainPanel2.setLayout(mainPanel2Layout);
        mainPanel2Layout.setHorizontalGroup(
            mainPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanel2Layout.createSequentialGroup()
                .addGap(360, 360, 360)
                .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(291, 291, 291))
            .addGroup(mainPanel2Layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(buttonPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(220, 220, 220))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane8)
                .addGap(40, 40, 40))
        );
        mainPanel2Layout.setVerticalGroup(
            mainPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(mainPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout inputscreen2Layout = new javax.swing.GroupLayout(inputscreen2);
        inputscreen2.setLayout(inputscreen2Layout);
        inputscreen2Layout.setHorizontalGroup(
            inputscreen2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputscreen2Layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, 816, Short.MAX_VALUE)
                .addGap(203, 203, 203))
            .addGroup(inputscreen2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jSeparator6)
                .addGap(46, 46, 46))
            .addGroup(inputscreen2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(mainPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );
        inputscreen2Layout.setVerticalGroup(
            inputscreen2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputscreen2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(mainPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(725, Short.MAX_VALUE))
        );

        jScrollPane10.setViewportView(inputscreen2);

        javax.swing.GroupLayout inputpageScreenLayout = new javax.swing.GroupLayout(inputpageScreen);
        inputpageScreen.setLayout(inputpageScreenLayout);
        inputpageScreenLayout.setHorizontalGroup(
            inputpageScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1224, Short.MAX_VALUE)
        );
        inputpageScreenLayout.setVerticalGroup(
            inputpageScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 1357, Short.MAX_VALUE)
        );

        content.add(inputpageScreen, "card3");

        progresspageScreen.setBackground(new java.awt.Color(0, 0, 0));
        progresspageScreen.setPreferredSize(new java.awt.Dimension(1163, 1131));

        jPanel5.setBackground(new java.awt.Color(57, 53, 54));
        jPanel5.setPreferredSize(new java.awt.Dimension(764, 912));

        jSeparator4.setBackground(new java.awt.Color(130, 130, 130));
        jSeparator4.setForeground(new java.awt.Color(130, 130, 130));

        jLabel4.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("A.C.E. - ASSESS.CALCULATE.EXCEL");

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("OVERALL");

        pie.setBackground(new java.awt.Color(153, 0, 0));
        pie.setForeground(new java.awt.Color(255, 255, 255));
        pie.setPreferredSize(new java.awt.Dimension(150, 150));

        jLabel3.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("TENTATIVE CURRENT GWA:");

        TGWA.setEditable(false);
        TGWA.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TGWA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TGWAActionPerformed(evt);
            }
        });

        GWAB1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        GWAB1.setForeground(new java.awt.Color(153, 0, 0));
        GWAB1.setText("CALCULATE");
        GWAB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GWAB1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("PREVIOUS GWA:");

        PGWA.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        VALED.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        VALED.setForeground(new java.awt.Color(153, 0, 0));
        VALED.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "INC", "COMP" }));
        VALED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VALEDActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("VALED:");

        javax.swing.GroupLayout pieLayout = new javax.swing.GroupLayout(pie);
        pie.setLayout(pieLayout);
        pieLayout.setHorizontalGroup(
            pieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pieLayout.createSequentialGroup()
                .addGroup(pieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pieLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(PGWA)
                        .addGap(111, 111, 111))
                    .addGroup(pieLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pieLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(83, 83, 83)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pieLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(TGWA)
                        .addGap(36, 36, 36)
                        .addComponent(GWAB1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(69, 69, 69)
                        .addComponent(VALED, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(59, 59, 59))
        );
        pieLayout.setVerticalGroup(
            pieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pieLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PGWA, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GWAB1)
                    .addComponent(TGWA, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VALED, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("GWA:");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel7.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("INDIVIDUAL GRADES");

        LOAD.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        LOAD.setForeground(new java.awt.Color(153, 0, 0));
        LOAD.setText("LOAD GRADES");
        LOAD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOADActionPerformed(evt);
            }
        });

        CLEARDATA.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CLEARDATA.setForeground(new java.awt.Color(153, 0, 0));
        CLEARDATA.setText("CLEAR DATA");
        CLEARDATA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEARDATAActionPerformed(evt);
            }
        });

        GWA.setEditable(false);
        GWA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GWAActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 0, 0));

        progressTable.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 17)); // NOI18N
        progressTable.setForeground(new java.awt.Color(57, 53, 54));
        progressTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Integrated Science", null},
                {"Mathematics", null},
                {"English", null},
                {"Filipino", null},
                {"Social Science", null},
                {"PEHM", null},
                {"VALED", ""},
                {"ADTech", null},
                {"Computer Science", null},
                {"Earth Science", null}
            },
            new String [] {
                "SUBJECT", "GRADE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        progressTable.setToolTipText("");
        progressTable.setGridColor(new java.awt.Color(57, 53, 54));
        progressTable.setMinimumSize(new java.awt.Dimension(0, 0));
        progressTable.setSelectionForeground(new java.awt.Color(57, 53, 54));
        progressTable.setShowGrid(true);
        progressTable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                progressTableComponentResized(evt);
            }
        });
        jScrollPane6.setViewportView(progressTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane6)
                .addGap(24, 24, 24))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        DL.setBackground(new java.awt.Color(255, 255, 255));
        DL.setForeground(new java.awt.Color(0, 102, 0));

        javax.swing.GroupLayout DLLayout = new javax.swing.GroupLayout(DL);
        DL.setLayout(DLLayout);
        DLLayout.setHorizontalGroup(
            DLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 87, Short.MAX_VALUE)
        );
        DLLayout.setVerticalGroup(
            DLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 71, Short.MAX_VALUE)
        );

        DLA.setEditable(false);
        DLA.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        DLA.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(DL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DLA)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(DLA, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GWAB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        GWAB.setForeground(new java.awt.Color(153, 0, 0));
        GWAB.setText("CALCULATE GWA");
        GWAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GWABActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(206, 206, 206))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(460, 460, 460)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(460, 460, 460))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jSeparator4)
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(342, 342, 342)
                .addComponent(LOAD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(49, 49, 49)
                .addComponent(CLEARDATA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(335, 335, 335))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(66, 66, 66))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(411, 411, 411)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GWA)
                .addGap(34, 34, 34)
                .addComponent(GWAB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(375, 375, 375))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(242, 242, 242))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(492, 492, 492)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(488, 488, 488))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addComponent(pie, javax.swing.GroupLayout.DEFAULT_SIZE, 769, Short.MAX_VALUE)
                .addGap(228, 228, 228))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(pie, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GWA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GWAB, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LOAD, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CLEARDATA, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(440, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel5);

        javax.swing.GroupLayout progresspageScreenLayout = new javax.swing.GroupLayout(progresspageScreen);
        progresspageScreen.setLayout(progresspageScreenLayout);
        progresspageScreenLayout.setHorizontalGroup(
            progresspageScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progresspageScreenLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1226, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        progresspageScreenLayout.setVerticalGroup(
            progresspageScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1357, Short.MAX_VALUE)
        );

        content.add(progresspageScreen, "card4");

        finalpageScreen.setBackground(new java.awt.Color(57, 53, 54));

        jLabel1.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("A.C.E. - ASSES.CALCULATE.EXCEL");

        jSeparator1.setBackground(new java.awt.Color(130, 130, 130));
        jSeparator1.setForeground(new java.awt.Color(130, 130, 130));
        jSeparator1.setPreferredSize(new java.awt.Dimension(50, 30));

        LOGOUT.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 30)); // NOI18N
        LOGOUT.setText("LOG-OUT");
        LOGOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOGOUTActionPerformed(evt);
            }
        });

        create.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 30)); // NOI18N
        create.setText("CREATE NEW ACCOUNT");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 30)); // NOI18N
        delete.setText("DELETE ACCOUNT");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout finalpageScreenLayout = new javax.swing.GroupLayout(finalpageScreen);
        finalpageScreen.setLayout(finalpageScreenLayout);
        finalpageScreenLayout.setHorizontalGroup(
            finalpageScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finalpageScreenLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(46, 46, 46))
            .addGroup(finalpageScreenLayout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addGroup(finalpageScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LOGOUT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
                    .addComponent(create, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(212, 212, 212))
        );
        finalpageScreenLayout.setVerticalGroup(
            finalpageScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finalpageScreenLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(LOGOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(create, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(800, Short.MAX_VALUE))
        );

        content.add(finalpageScreen, "card5");

        dashboard.add(content, java.awt.BorderLayout.CENTER);

        getContentPane().add(dashboard, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1325, 1464));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    

    private void hideshow(JPanel menushowhide, boolean dashboard){
        if (dashboard == true) {
            menushowhide.setPreferredSize(new Dimension(85, menushowhide.getHeight()));
        }
        else {
            menushowhide.setPreferredSize(new Dimension(325, menushowhide.getHeight()));
        }     
    }
    
    private void btnHidemenuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHidemenuMouseEntered
        
    }//GEN-LAST:event_btnHidemenuMouseEntered

    private void btnHidemenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHidemenuMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHidemenuMouseExited

    private void btnHidemenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHidemenuMouseClicked
        //clickmenu(hidemenu, setting, 1);
        if (a == false) {
            hideshow(menu, a);
            SwingUtilities.updateComponentTreeUI(this);
            //slideAnimation(menuHide, 0, menuHide.getWidth(), 10);
            a = true;
        }
        else {
            hideshow(menu, a);
            SwingUtilities.updateComponentTreeUI(this);           
            //slideAnimation(menuHide, menuHide.getWidth(), 0, 10);
            a = false;
        }   
    }//GEN-LAST:event_btnHidemenuMouseClicked

    private void SUBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SUBMouseClicked
        new smthsmtj().setVisible(true);
    }//GEN-LAST:event_SUBMouseClicked

    private void btnHomepageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomepageMouseClicked
        homepage.setBackground(new Color(130,130,130));
        inputpage.setBackground(new Color(194,194,194));
        progresspage.setBackground(new Color(194,194,194));
        finalpage.setBackground(new Color(194,194,194));
        
        btnHomepage.setForeground(new Color(255,255,255));
        btnInputpage.setForeground(new Color(57,53,54));
        btnProgresspage.setForeground(new Color(57,53,54));
        btnFinalpage.setForeground(new Color(57,53,54));
        
        homepageScreen.setVisible(true);
        inputpageScreen.setVisible(false);
        progresspageScreen.setVisible(false);
        finalpageScreen.setVisible(false);
    }//GEN-LAST:event_btnHomepageMouseClicked

    private void btnInputpageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInputpageMouseClicked
        homepage.setBackground(new Color(194,194,194));
        inputpage.setBackground(new Color(130,130,130));
        progresspage.setBackground(new Color(194,194,194));
        finalpage.setBackground(new Color(194,194,194));
        
        btnHomepage.setForeground(new Color(57,53,54));
        btnInputpage.setForeground(new Color(255,255,255));
        btnProgresspage.setForeground(new Color(57,53,54));
        btnFinalpage.setForeground(new Color(57,53,54));
        
        homepageScreen.setVisible(false);
        inputpageScreen.setVisible(true);
        progresspageScreen.setVisible(false);
        finalpageScreen.setVisible(false);
        
        setupTable();   
    }//GEN-LAST:event_btnInputpageMouseClicked

    private void btnProgresspageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProgresspageMouseClicked
        homepage.setBackground(new Color(194,194,194));
        inputpage.setBackground(new Color(194,194,194));
        progresspage.setBackground(new Color(130,130,130));
        finalpage.setBackground(new Color(194,194,194));
        
        btnHomepage.setForeground(new Color(57,53,54));
        btnInputpage.setForeground(new Color(57,53,54));
        btnProgresspage.setForeground(new Color(255,255,255));
        btnFinalpage.setForeground(new Color(57,53,54));
        
        homepageScreen.setVisible(false);
        inputpageScreen.setVisible(false);
        progresspageScreen.setVisible(true);
        finalpageScreen.setVisible(false);
    }//GEN-LAST:event_btnProgresspageMouseClicked

    private void btnFinalpageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFinalpageMouseClicked
        homepage.setBackground(new Color(194,194,194));
        inputpage.setBackground(new Color(194,194,194));
        progresspage.setBackground(new Color(194,194,194));
        finalpage.setBackground(new Color(130,130,130));
        
        btnHomepage.setForeground(new Color(57,53,54));
        btnInputpage.setForeground(new Color(57,53,54));
        btnProgresspage.setForeground(new Color(57,53,54));
        btnFinalpage.setForeground(new Color(255,255,255));
        
        homepageScreen.setVisible(false);
        inputpageScreen.setVisible(false);
        progresspageScreen.setVisible(false);
        finalpageScreen.setVisible(true);
    }//GEN-LAST:event_btnFinalpageMouseClicked

    private void menuSub2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub2MouseClicked
    jScrollPane1.getViewport().setViewPosition(new Point(0, 130));
    
    homepageScreen.setVisible(true);
    inputpageScreen.setVisible(false);
    progresspageScreen.setVisible(false);
    finalpageScreen.setVisible(false);
    
    homepage.setBackground(new Color(130,130,130));
    inputpage.setBackground(new Color(194,194,194));
    progresspage.setBackground(new Color(194,194,194));
    finalpage.setBackground(new Color(194,194,194));
        
    btnHomepage.setForeground(new Color(255,255,255));
    btnInputpage.setForeground(new Color(57,53,54));
    btnProgresspage.setForeground(new Color(57,53,54));
    btnFinalpage.setForeground(new Color(57,53,54));
    }//GEN-LAST:event_menuSub2MouseClicked

    private void menuSub4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub4MouseClicked
    jScrollPane1.getViewport().setViewPosition(new Point(0, 580));   
    
        homepageScreen.setVisible(true);
        inputpageScreen.setVisible(false);
        progresspageScreen.setVisible(false);
        finalpageScreen.setVisible(false);

        homepage.setBackground(new Color(130,130,130));
        inputpage.setBackground(new Color(194,194,194));
        progresspage.setBackground(new Color(194,194,194));
        finalpage.setBackground(new Color(194,194,194));

        btnHomepage.setForeground(new Color(255,255,255));
        btnInputpage.setForeground(new Color(57,53,54));
        btnProgresspage.setForeground(new Color(57,53,54));
        btnFinalpage.setForeground(new Color(57,53,54));   
    }//GEN-LAST:event_menuSub4MouseClicked

    private void menuSub5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub5MouseClicked
    jScrollPane1.getViewport().setViewPosition(new Point(0, 760));
      
        homepageScreen.setVisible(true);
        inputpageScreen.setVisible(false);
        progresspageScreen.setVisible(false);
        finalpageScreen.setVisible(false);

        homepage.setBackground(new Color(130,130,130));
        inputpage.setBackground(new Color(194,194,194));
        progresspage.setBackground(new Color(194,194,194));
        finalpage.setBackground(new Color(194,194,194));

        btnHomepage.setForeground(new Color(255,255,255));
        btnInputpage.setForeground(new Color(57,53,54));
        btnProgresspage.setForeground(new Color(57,53,54));
        btnFinalpage.setForeground(new Color(57,53,54));  
    }//GEN-LAST:event_menuSub5MouseClicked
 
    private void menuSub6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub6MouseClicked
    jScrollPane1.getViewport().setViewPosition(new Point(0, 960));
    
        homepageScreen.setVisible(true);
        inputpageScreen.setVisible(false);
        progresspageScreen.setVisible(false);
        finalpageScreen.setVisible(false);

        homepage.setBackground(new Color(130,130,130));
        inputpage.setBackground(new Color(194,194,194));
        progresspage.setBackground(new Color(194,194,194));
        finalpage.setBackground(new Color(194,194,194));

        btnHomepage.setForeground(new Color(255,255,255));
        btnInputpage.setForeground(new Color(57,53,54));
        btnProgresspage.setForeground(new Color(57,53,54));
        btnFinalpage.setForeground(new Color(57,53,54));   
    }//GEN-LAST:event_menuSub6MouseClicked

    private void menuSub7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub7MouseClicked
    jScrollPane1.getViewport().setViewPosition(new Point(0, 1170));
    
        homepageScreen.setVisible(true);
        inputpageScreen.setVisible(false);
        progresspageScreen.setVisible(false);
        finalpageScreen.setVisible(false);

        homepage.setBackground(new Color(130,130,130));
        inputpage.setBackground(new Color(194,194,194));
        progresspage.setBackground(new Color(194,194,194));
        finalpage.setBackground(new Color(194,194,194));

        btnHomepage.setForeground(new Color(255,255,255));
        btnInputpage.setForeground(new Color(57,53,54));
        btnProgresspage.setForeground(new Color(57,53,54));
        btnFinalpage.setForeground(new Color(57,53,54));  
    }//GEN-LAST:event_menuSub7MouseClicked

    private void menuSub8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub8MouseClicked
    jScrollPane1.getViewport().setViewPosition(new Point(0, 1400));
    
        homepageScreen.setVisible(true);
        inputpageScreen.setVisible(false);
        progresspageScreen.setVisible(false);
        finalpageScreen.setVisible(false);

        homepage.setBackground(new Color(130,130,130));
        inputpage.setBackground(new Color(194,194,194));
        progresspage.setBackground(new Color(194,194,194));
        finalpage.setBackground(new Color(194,194,194));

        btnHomepage.setForeground(new Color(255,255,255));
        btnInputpage.setForeground(new Color(57,53,54));
        btnProgresspage.setForeground(new Color(57,53,54));
        btnFinalpage.setForeground(new Color(57,53,54));   
    }//GEN-LAST:event_menuSub8MouseClicked

    private void menuSub9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub9MouseClicked
    jScrollPane1.getViewport().setViewPosition(new Point(0, 1600));

        homepageScreen.setVisible(true);
        inputpageScreen.setVisible(false);
        progresspageScreen.setVisible(false);
        finalpageScreen.setVisible(false);

        homepage.setBackground(new Color(130,130,130));
        inputpage.setBackground(new Color(194,194,194));
        progresspage.setBackground(new Color(194,194,194));
        finalpage.setBackground(new Color(194,194,194));

        btnHomepage.setForeground(new Color(255,255,255));
        btnInputpage.setForeground(new Color(57,53,54));
        btnProgresspage.setForeground(new Color(57,53,54));
        btnFinalpage.setForeground(new Color(57,53,54));  
    }//GEN-LAST:event_menuSub9MouseClicked

    private void menuSub10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub10MouseClicked
    jScrollPane1.getViewport().setViewPosition(new Point(0, 1800));

        homepageScreen.setVisible(true);
        inputpageScreen.setVisible(false);
        progresspageScreen.setVisible(false);
        finalpageScreen.setVisible(false);

        homepage.setBackground(new Color(130,130,130));
        inputpage.setBackground(new Color(194,194,194));
        progresspage.setBackground(new Color(194,194,194));
        finalpage.setBackground(new Color(194,194,194));

        btnHomepage.setForeground(new Color(255,255,255));
        btnInputpage.setForeground(new Color(57,53,54));
        btnProgresspage.setForeground(new Color(57,53,54));
        btnFinalpage.setForeground(new Color(57,53,54));   
    }//GEN-LAST:event_menuSub10MouseClicked

    private void menuSub11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub11MouseClicked
        
    }//GEN-LAST:event_menuSub11MouseClicked

    private void sub1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sub1MouseEntered
        
    }//GEN-LAST:event_sub1MouseEntered

    private void sub1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sub1MouseExited
        
    }//GEN-LAST:event_sub1MouseExited

    private void LOGOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOGOUTActionPerformed
        
        int yess = JOptionPane.showConfirmDialog(this, 
        "Are you sure you want to log-out of this account?", 
        "Confirm Log-Out of Account", JOptionPane.YES_NO_OPTION);
        if(yess == JOptionPane.YES_OPTION){
            LogIn login = new LogIn(); 
            login.setVisible(true); 
            this.dispose(); 
        }
        
    }//GEN-LAST:event_LOGOUTActionPerformed

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        
        int yesss =JOptionPane.showConfirmDialog(this, 
        "Are you sure you want to create a new account and log-out of this account?", 
        "Confirm Create new account", JOptionPane.YES_NO_OPTION);
        if(yesss == JOptionPane.YES_OPTION){
            SignUp signup = new SignUp(); 
            signup.setVisible(true); 
            this.dispose(); 
        }
        
    }//GEN-LAST:event_createActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
    int confirm = JOptionPane.showConfirmDialog(this, 
        "Are you sure you want to delete your entire account and all associated data?", 
        "Confirm Delete Account", JOptionPane.YES_NO_OPTION);

    if (confirm != JOptionPane.YES_OPTION) {
        return; // User cancelled
    }

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    try {
        // Get the userId from GlobalClass
        int userId = GlobalClass.userId;

        // Validate presence of user ID
        if (userId == 0) {
            JOptionPane.showMessageDialog(this, "User ID not set. Please log in.");
            this.setVisible(false); // Hide the current window (optional)
            LogIn loginFrame = new LogIn(); // Create the login frame
            loginFrame.setVisible(true); // Show the login frame
            return;
        }

        // Establish a connection to the database
        con = DatabaseConnection.getAceDatabaseConnection();
        if (con == null) {
            JOptionPane.showMessageDialog(this, "Database connection failed.");
            return;
        }

        // Check if the user exists in the 'users' table
        String checkUserSql = "SELECT user_id FROM users WHERE user_id = ?";
        pst = con.prepareStatement(checkUserSql);
        pst.setInt(1, userId);
        rs = pst.executeQuery();

        // If no user is found, alert the user and return
        if (!rs.next()) {
            JOptionPane.showMessageDialog(this, "No account found with the specified user ID.");
            return; // Exit as the account does not exist
        }

        // Start a transaction to ensure data consistency
        con.setAutoCommit(false);

        // Delete grades related to the user
        String deleteGradesSql = "DELETE FROM grades WHERE user_id = ?";
        pst = con.prepareStatement(deleteGradesSql);
        pst.setInt(1, userId);
        pst.executeUpdate();

        // Delete the user's profile or account (assuming there's a table called 'users')
        String deleteUserSql = "DELETE FROM users WHERE user_id = ?";
        pst = con.prepareStatement(deleteUserSql);
        pst.setInt(1, userId);
        pst.executeUpdate();

        // Commit the transaction
        con.commit();

        JOptionPane.showMessageDialog(this, "Your account and all associated data have been deleted successfully.");

        // Optionally, clear UI table model or other components
        DefaultTableModel model = (DefaultTableModel) progressTable.getModel();
        model.setRowCount(0); // Clear the table

        // Log the user out or perform any other necessary actions
        // For example: GlobalClass.userId = 0; // Logging out user

    } catch (SQLException ex) {
        // Rollback if there's an error
        try {
            if (con != null) {
                con.rollback();
            }
        } catch (SQLException rollbackEx) {
            rollbackEx.printStackTrace();
        }

        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error deleting account: " + ex.getMessage());
    } finally {
        try {
            if (pst != null) pst.close();
            if (rs != null) rs.close(); // Close the ResultSet

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }



    }//GEN-LAST:event_deleteActionPerformed

    private void sub12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sub12MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_sub12MouseEntered

    private void sub12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sub12MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_sub12MouseExited

    private void menuSub3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub3MouseClicked
    jScrollPane1.getViewport().setViewPosition(new Point(0, 340));
    
        homepageScreen.setVisible(true);
        inputpageScreen.setVisible(false);
        progresspageScreen.setVisible(false);
        finalpageScreen.setVisible(false);

        homepage.setBackground(new Color(130,130,130));
        inputpage.setBackground(new Color(194,194,194));
        progresspage.setBackground(new Color(194,194,194));
        finalpage.setBackground(new Color(194,194,194));

        btnHomepage.setForeground(new Color(255,255,255));
        btnInputpage.setForeground(new Color(57,53,54));
        btnProgresspage.setForeground(new Color(57,53,54));
        btnFinalpage.setForeground(new Color(57,53,54));   
    }//GEN-LAST:event_menuSub3MouseClicked

    private void menuSub1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub1MouseClicked
    jScrollPane1.getViewport().setViewPosition(new Point(0, 0));
    
    homepageScreen.setVisible(true);
    inputpageScreen.setVisible(false);
    progresspageScreen.setVisible(false);
    finalpageScreen.setVisible(false);
    
    homepage.setBackground(new Color(130,130,130));
    inputpage.setBackground(new Color(194,194,194));
    progresspage.setBackground(new Color(194,194,194));
    finalpage.setBackground(new Color(194,194,194));
        
    btnHomepage.setForeground(new Color(255,255,255));
    btnInputpage.setForeground(new Color(57,53,54));
    btnProgresspage.setForeground(new Color(57,53,54));
    btnFinalpage.setForeground(new Color(57,53,54));    
    }//GEN-LAST:event_menuSub1MouseClicked

    private void LOADActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOADActionPerformed
        loadGrades();
    }//GEN-LAST:event_LOADActionPerformed

    private void CLEARDATAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEARDATAActionPerformed
        clearData();
        
        DefaultTableModel model = (DefaultTableModel) progressTable.getModel();
        int rowCount = model.getRowCount();
        int columnCount = model.getColumnCount();

        for (int row = 0; row < rowCount; row++) {
            for (int col = 0; col < columnCount; col++) {
                model.setValueAt("", row, col); // Clear the cell content
            }
        }
    }//GEN-LAST:event_CLEARDATAActionPerformed

    private void GWAB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GWAB1ActionPerformed
        // Define your subjects and their corresponding units here
        Map<String, Double> subjectUnits = new HashMap<>();
        // TODO: Replace the keys and values below with your actual subjects and units
        subjectUnits.put("INTEGRATED SCIENCE", 1.7);
        subjectUnits.put("MATH", 1.7);
        subjectUnits.put("ENGLISH", 1.3);
        subjectUnits.put("FILIPINO", 1.0);
        subjectUnits.put("SOCIAL SCIENCE", 1.0);
        subjectUnits.put("PEHM", 1.0);
        subjectUnits.put("ADTECH", 1.0);
        subjectUnits.put("COMPUTER SCIENCE", 1.0);

        double totalWeightedGrades = 0.0;
        double totalUnits = 0.0;

        Connection con = null;
        PreparedStatement pst = null;
        ResultSet rs = null;

        try {
            con = DatabaseConnection.getAceDatabaseConnection();
            if (con == null) {
                JOptionPane.showMessageDialog(this, "Failed to connect to database.");
                return;
            }

            for (Map.Entry<String, Double> entry : subjectUnits.entrySet()) {
                String subject = entry.getKey();
                double unit = entry.getValue();

                // Fetch grade for this subject
                pst = con.prepareStatement("SELECT grade FROM grades WHERE subject = ?");
                pst.setString(1, subject);
                rs = pst.executeQuery();

                if (rs.next()) {
                    double grade = rs.getDouble("grade");
                    totalWeightedGrades += grade * unit;
                    totalUnits += unit;
                } else {
                    // Missing grade found - show error and abort
                    JOptionPane.showMessageDialog(this, 
                        "Not complete subjects: missing grade for " + subject, 
                        "Incomplete Data", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                rs.close();
                pst.close();
            }
            double equivalent = 0.00;
            double weightedAverage = totalWeightedGrades / totalUnits;

            JOptionPane.showMessageDialog(this,
                    String.format("Overall Weighted Average: %.2f%%", weightedAverage),
                    "Calculation Result", JOptionPane.INFORMATION_MESSAGE);
                    
                    double grade = weightedAverage;
                     if (grade >= 96.00 && grade <= 100.00) {
                        equivalent = 1.00;
                    } else if (grade >= 90 && grade <= 95.99) {
                        equivalent = 1.25;
                    } else if (grade >= 84 && grade <= 89.99) {
                        equivalent = 1.50;
                    } else if (grade >= 78 && grade <= 83.99) {
                        equivalent = 1.75;
                    } else if (grade >= 72 && grade <= 77.99) {
                        equivalent = 2.00;
                    } else if (grade >= 66 && grade <= 71.99) {
                        equivalent = 2.25;
                    } else if (grade >= 60 && grade <= 65.99) {
                        equivalent = 2.50;
                    } else if (grade >= 55 && grade <= 59.99) {
                        equivalent = 2.75;
                    } else if (grade >= 50 && grade <= 54.99) {
                        equivalent = 3.00;
                    } else if (grade >= 40 && grade <= 49.99) {
                        equivalent = 4.00;
                    } else if (grade < 40) {
                        equivalent = 5.00;
                        
        }
                    
                    TGWA.setText(String.valueOf(equivalent));

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error calculating grades: " + ex.getMessage());
        } finally {
            try {
                if (rs != null) rs.close();
                if (pst != null) pst.close();
                if (con != null) con.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
    
    }//GEN-LAST:event_GWAB1ActionPerformed

    private void GWABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GWABActionPerformed
       
        
       double pgwa = Double.parseDouble(PGWA.getText());
       double tgwa = Double.parseDouble(TGWA.getText());
       double gwa = (((pgwa * 1) + (tgwa * 2))/3);
       
       
       
       String selectedOption = (String) VALED.getSelectedItem();
        
       if(selectedOption.equals("SELECT")){
           GWAB.setEnabled(false);
           DLA.setText("SELECT VALED OPTION");
       }else{
           GWA.setText(String.format("%.2f", gwa));
           
           if(gwa <= 1.50){
           DL.setBackground(java.awt.Color.GREEN);
           DLA.setText("CONGRATULATIONS FOR BEING A DIRECTOR'S LISTER!");
           DLA.setForeground(Color.green);
       }else{
           DL.setBackground(java.awt.Color.RED);
           DLA.setText("THANK YOU FOR TRYING YOUR BEST!");
           DLA.setForeground(Color.red);
       }       
       }
       
       
    }//GEN-LAST:event_GWABActionPerformed

    private void subjectComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectComboBoxActionPerformed
        DefaultTableModel model = (DefaultTableModel) assessmentTable.getModel();


        String selected = (String) subjectComboBox.getSelectedItem();


        switch (selected) {
            case "INTEGRATED SCIENCE":
                model.setColumnIdentifiers(new Object[]{"FORMATIVE(score)", "FORMATIVE(total)", "ALTERNATIVE(score)","ALTERNATIVE(total)", "LONG TEST(score)", "LONG TEST(total)" });
                break;
            case "MATH":
                model.setColumnIdentifiers(new Object[]{"FORMATIVE(score)", "FORMATIVE(total)", "ALTERNATIVE(score)","ALTERNATIVE(total)", "LONG TEST(score)", "LONG TEST(total)" });
                break;
            case "ENGLISH":
                model.setColumnIdentifiers(new Object[]{"FORMATIVE(score)", "FORMATIVE(total)", "ALTERNATIVE(score)","ALTERNATIVE(total)", "LONG TEST(score)", "LONG TEST(total)" });
                break;
            case "FILIPINO":
                model.setColumnIdentifiers(new Object[]{"FORMATIVE(score)", "FORMATIVE(total)", "ALTERNATIVE(score)","ALTERNATIVE(total)", "LONG TEST(score)", "LONG TEST(total)" });
                break;
            case "SOCIAL SCIENCE":
                model.setColumnIdentifiers(new Object[]{"FORMATIVE(score)", "FORMATIVE(total)", "ALTERNATIVE(score)","ALTERNATIVE(total)", "LONG TEST(score)", "LONG TEST(total)" });
                break;
            case "COMPUTER SCIENCE":
                model.setColumnIdentifiers(new Object[]{"FORMATIVE(score)", "FORMATIVE(total)", "ALTERNATIVE(score)","ALTERNATIVE(total)", "LONG TEST(score)", "LONG TEST(total)" });
                break;
            case "PEHM":
                model.setColumnIdentifiers(new Object[]{"FORMATIVE(score)", "FORMATIVE(total)", "ALTERNATIVE(score)","ALTERNATIVE(total)"});
                break;
            case "ADTECH":
                model.setColumnIdentifiers(new Object[]{"FORMATIVE(score)", "FORMATIVE(total)", "ALTERNATIVE(score)","ALTERNATIVE(total)"});
                break;
            case "EARTH SCIENCE":
                model.setColumnIdentifiers(new Object[]{"FORMATIVE(score)", "FORMATIVE(total)", "ALTERNATIVE(score)","ALTERNATIVE(total)", "LONG TEST(score)","LONG TEST(total)" });
                break;
            default:
                model.setColumnIdentifiers(new Object[]{"Column1", "Column2"});
                break;
        }
    }//GEN-LAST:event_subjectComboBoxActionPerformed

    private void SAVESAVEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAVESAVEActionPerformed

    // Get the selected subject from the combo box
    String subject = subjectComboBox.getSelectedItem().toString(); // Selected subject

    try {
        // Parse the overall average from the label
        String averageText = calculateGradeLabel.getText().replace("Overall Average: ", "").replace("%", "").trim();
        double overallAverage = Double.parseDouble(averageText);

        // Get user ID and grade level from GlobalClass
        int userId = GlobalClass.userId;
        String gradeLevel = GlobalClass.gradeLevel;

        // Validate presence of user ID and grade level
        if (userId == 0 || gradeLevel == null || gradeLevel.isEmpty()) {
            JOptionPane.showMessageDialog(this, "User ID or grade level not set. Please log in and select grade level.");
            return;
        }

        // Establish a database connection
        Connection con = DatabaseConnection.getAceDatabaseConnection();
        if (con == null) {
            JOptionPane.showMessageDialog(this, "Database connection failed.");
            return;
        }

        // SQL query to insert or update the grade for the selected grade level
        String sql = "REPLACE INTO grades (subject, grade, user_id, grade_level) VALUES (?, ?, ?, ?)";

        // Prepare the statement and set the parameters
        PreparedStatement stmt = con.prepareStatement(sql);
        stmt.setString(1, subject); // Set the subject
        stmt.setDouble(2, overallAverage); // Set the overall grade (average)
        stmt.setInt(3, userId); // Set the user ID
        stmt.setString(4, gradeLevel); // Set the grade level (Grade 7, 8, 9, etc.)

        // Execute the update or insert
        stmt.executeUpdate();

        // Show success message
        JOptionPane.showMessageDialog(this, "Grade saved successfully!");

    } catch (NumberFormatException e) {
        // Handle invalid grade format
        JOptionPane.showMessageDialog(this, "Invalid average grade format.");
    } catch (SQLException e) {
        // Handle SQL exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error saving grade: " + e.getMessage());
    } catch (Exception e) {
        // Handle other exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Unexpected error: " + e.getMessage());
    }




    }//GEN-LAST:event_SAVESAVEActionPerformed

    private void CLEARCLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEARCLEARActionPerformed
        DefaultTableModel model = (DefaultTableModel) assessmentTable.getModel();
        int rowCount = model.getRowCount();
        int columnCount = model.getColumnCount();

        for (int row = 0; row < rowCount; row++) {
            for (int col = 0; col < columnCount; col++) {
                model.setValueAt("", row, col); // Clear the cell content
                 calculateGradeLabel.setText("Overall Average: ");
                 subjectComboBox.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_CLEARCLEARActionPerformed

    private void calculateButtoncalculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtoncalculateButtonActionPerformed

        calculateAverage();
    }//GEN-LAST:event_calculateButtoncalculateButtonActionPerformed

    private void addRowButtonaddRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRowButtonaddRowButtonActionPerformed
        if (tableModel == null) {
            tableModel = (DefaultTableModel) assessmentTable.getModel();
        }

        addEmptyRow();
    }//GEN-LAST:event_addRowButtonaddRowButtonActionPerformed

    private void TGWAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TGWAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TGWAActionPerformed

    private void GWAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GWAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GWAActionPerformed

    private void progressTableComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_progressTableComponentResized
        // TODO add your handling code here:

    }//GEN-LAST:event_progressTableComponentResized

    private void menuSub1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub1MouseEntered
        sub0.setBackground(new Color(0,0,0));
        menuSub1.setForeground(new Color(153,0,0));
    }//GEN-LAST:event_menuSub1MouseEntered

    private void menuSub1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub1MouseExited
        sub0.setBackground(new Color(153,0,0));
        menuSub1.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_menuSub1MouseExited

    private void menuSub2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub2MouseEntered
        sub1.setBackground(new Color(0,0,0));
        menuSub2.setForeground(new Color(153,0,0));
    }//GEN-LAST:event_menuSub2MouseEntered

    private void menuSub2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub2MouseExited
        sub1.setBackground(new Color(153,0,0));
        menuSub2.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_menuSub2MouseExited

    private void menuSub3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub3MouseEntered
        sub2.setBackground(new Color(0,0,0));
        menuSub3.setForeground(new Color(153,0,0));
    }//GEN-LAST:event_menuSub3MouseEntered

    private void menuSub3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub3MouseExited
        sub2.setBackground(new Color(153,0,0));
        menuSub3.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_menuSub3MouseExited

    private void menuSub4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub4MouseEntered
        sub3.setBackground(new Color(0,0,0));
        menuSub4.setForeground(new Color(153,0,0));
    }//GEN-LAST:event_menuSub4MouseEntered

    private void menuSub4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub4MouseExited
        sub3.setBackground(new Color(153,0,0));
        menuSub4.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_menuSub4MouseExited

    private void menuSub5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub5MouseEntered
        sub4.setBackground(new Color(0,0,0));
        menuSub5.setForeground(new Color(153,0,0));
    }//GEN-LAST:event_menuSub5MouseEntered

    private void menuSub5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub5MouseExited
        sub4.setBackground(new Color(153,0,0));
        menuSub5.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_menuSub5MouseExited

    private void menuSub6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub6MouseEntered
        sub5.setBackground(new Color(0,0,0));
        menuSub6.setForeground(new Color(153,0,0));
    }//GEN-LAST:event_menuSub6MouseEntered

    private void menuSub6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub6MouseExited
        sub5.setBackground(new Color(153,0,0));
        menuSub6.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_menuSub6MouseExited

    private void menuSub7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub7MouseEntered
        sub6.setBackground(new Color(0,0,0));
        menuSub7.setForeground(new Color(153,0,0));
    }//GEN-LAST:event_menuSub7MouseEntered

    private void menuSub7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub7MouseExited
        sub6.setBackground(new Color(153,0,0));
        menuSub7.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_menuSub7MouseExited

    private void menuSub8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub8MouseEntered
        sub7.setBackground(new Color(0,0,0));
        menuSub8.setForeground(new Color(153,0,0));
    }//GEN-LAST:event_menuSub8MouseEntered

    private void menuSub8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub8MouseExited
        sub7.setBackground(new Color(153,0,0));
        menuSub8.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_menuSub8MouseExited

    private void menuSub9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub9MouseEntered
        sub8.setBackground(new Color(0,0,0));
        menuSub9.setForeground(new Color(153,0,0));
    }//GEN-LAST:event_menuSub9MouseEntered

    private void menuSub9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub9MouseExited
        sub8.setBackground(new Color(153,0,0));
        menuSub9.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_menuSub9MouseExited

    private void menuSub10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub10MouseEntered
        sub9.setBackground(new Color(0,0,0));
        menuSub10.setForeground(new Color(153,0,0));
    }//GEN-LAST:event_menuSub10MouseEntered

    private void menuSub10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSub10MouseExited
        sub9.setBackground(new Color(153,0,0));
        menuSub10.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_menuSub10MouseExited

    private void btnHomepageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomepageMouseEntered
        homepage.setBackground(new Color(130,130,130));    
        btnHomepage.setForeground(new Color(255,255,255));
        
    }//GEN-LAST:event_btnHomepageMouseEntered

    private void btnHomepageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomepageMouseExited
        homepage.setBackground(new Color(194,194,194));    
        btnHomepage.setForeground(new Color(57,53,54));
    }//GEN-LAST:event_btnHomepageMouseExited

    private void btnInputpageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInputpageMouseEntered
        inputpage.setBackground(new Color(130,130,130));    
        btnInputpage.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_btnInputpageMouseEntered

    private void btnInputpageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInputpageMouseExited
        inputpage.setBackground(new Color(194,194,194));    
        btnInputpage.setForeground(new Color(57,53,54));
    }//GEN-LAST:event_btnInputpageMouseExited

    private void btnProgresspageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProgresspageMouseEntered
        progresspage.setBackground(new Color(130,130,130));    
        btnProgresspage.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_btnProgresspageMouseEntered

    private void btnProgresspageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProgresspageMouseExited
        progresspage.setBackground(new Color(194,194,194));    
        btnProgresspage.setForeground(new Color(57,53,54));
    }//GEN-LAST:event_btnProgresspageMouseExited

    private void btnFinalpageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFinalpageMouseEntered
        finalpage.setBackground(new Color(130,130,130));    
        btnFinalpage.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_btnFinalpageMouseEntered

    private void btnFinalpageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFinalpageMouseExited
        finalpage.setBackground(new Color(194,194,194));    
        btnFinalpage.setForeground(new Color(57,53,54));
    }//GEN-LAST:event_btnFinalpageMouseExited

    private void VALEDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VALEDActionPerformed
        String selectedOption = (String) VALED.getSelectedItem();
                if ("INC".equals(selectedOption)) {
                    
                    GWAB.setBackground(Color.red);
                    GWAB.setBackground(Color.white);
                    GWAB.setEnabled(false); // Disable the button
                    DLA.setText("CANNOT PROCEED IF INCOMPLETE");
                    DLA.setForeground(Color.red);
                } else if("COMP".equals(selectedOption)){
                    GWAB.setEnabled(true);
                    DLA.setText("");
                }else if("SELECT".equals(selectedOption)){
                    GWAB.setEnabled(false);
                    DLA.setText("SELECT VALED OPTION");
                    DLA.setForeground(Color.red);
                }
    }//GEN-LAST:event_VALEDActionPerformed
    private void addEmptyRow() {
        int numColumns = assessmentTypes.length * 2; // 6 columns
        Object[] rowData = new Object[numColumns];

        for (int j = 0; j < numColumns; j++) {
            if (j == 0 || j == 2 || j == 4 || j == 1 || j == 3 || j == 5) { // If it's a score or total column
                rowData[j] = null;
            } else {
                rowData[j] = ""; // For other columns (if any)
            }
        }
        tableModel.addRow(rowData);
}
    
    private void calculateAverage() {
    try {
        int columnCount = tableModel.getColumnCount();
        int categoryCount = columnCount / 2;  // Assuming 2 columns per category (score and total)

        double[] categoryTotals = new double[categoryCount];
        double[] categoryMaxTotals = new double[categoryCount];

        // Calculate sum and max total for each assessment category (formative, alternative, exam)
        for (int category = 0; category < categoryCount; category++) {
            int scoreColIndex = category * 2;  // Column index for the score
            int totalColIndex = category * 2 + 1;  // Column index for the total

            for (int row = 0; row < tableModel.getRowCount(); row++) {
                Object scoreObj = tableModel.getValueAt(row, scoreColIndex);
                Object totalObj = tableModel.getValueAt(row, totalColIndex);

                // Skip empty rows
                if ((scoreObj == null || scoreObj.toString().trim().isEmpty()) &&
                    (totalObj == null || totalObj.toString().trim().isEmpty())) {
                    continue;
                }

                try {
                    double score = 0;
                    double total = 100;

                    if (scoreObj != null && !scoreObj.toString().trim().isEmpty()) {
                        score = Double.parseDouble(scoreObj.toString());
                    }

                    if (totalObj != null && !totalObj.toString().trim().isEmpty()) {
                        total = Double.parseDouble(totalObj.toString());
                    }

                    // Validate input (score must be between 0 and total, and total must be greater than 0)
                    if (score < 0 || total <= 0 || score > total) {
                        JOptionPane.showMessageDialog(this, 
                            "Invalid entry at row " + (row + 1) + ", column " + (scoreColIndex + 1) +
                            ".\nScore must be between 0 and total, and total must be greater than 0.", 
                            "Input Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    categoryTotals[category] += score;
                    categoryMaxTotals[category] += total;

                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, 
                        "Invalid numeric entry at row " + (row + 1) + ", column " + (scoreColIndex + 1) +
                        ". Please enter numeric values only.", 
                        "Input Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        }

        // Calculate percentages for each category
        double[] categoryPercentages = new double[categoryCount];
        for (int i = 0; i < categoryCount; i++) {
            if (categoryMaxTotals[i] > 0) {
                categoryPercentages[i] = (categoryTotals[i] / categoryMaxTotals[i]) * 100;
            }
        }

        // Get subject-based weights (to be customized as needed)
        String selectedSubject = (String) subjectComboBox.getSelectedItem();
        double[] weights;

        Map<String, double[]> subjectWeights = new HashMap<>();
        subjectWeights.put("INTEGRATED SCIENCE", new double[]{0.25, 0.25, 0.50});
        subjectWeights.put("MATHEMATICS", new double[]{0.25, 0.25, 0.50});
        subjectWeights.put("ENGLISH", new double[]{0.25, 0.40, 0.35});
        subjectWeights.put("FILIPINO", new double[]{0.25, 0.40, 0.35});
        subjectWeights.put("SOCIAL SCIENCE", new double[]{0.25, 0.25, 0.35});
        subjectWeights.put("PEHM", new double[]{0.25, 0.75});
        subjectWeights.put("ADTECH", new double[]{0.25, 0.75});
        subjectWeights.put("COMPUTER SCIENCE", new double[]{0.25, 0.40, 0.35});
        subjectWeights.put("EARTH SCIENCE", new double[]{0.25, 0.25, 0.50});

        // Get the weights for the selected subject
        if (subjectWeights.containsKey(selectedSubject) && subjectWeights.get(selectedSubject).length == categoryCount) {
            weights = subjectWeights.get(selectedSubject);
        } else {
            // Default: equal weights for each category if no subject-specific weights are found
            weights = new double[categoryCount];
            double equalWeight = 1.0 / categoryCount;
            Arrays.fill(weights, equalWeight);
        }

        // Weighted average calculation
        double weightedSum = 0;
        double weightSum = 0;

        for (int i = 0; i < categoryCount; i++) {
            if (categoryMaxTotals[i] > 0) {
                weightedSum += categoryPercentages[i] * weights[i];
                weightSum += weights[i];
            }
        }

        double overallAverage = weightSum > 0 ? weightedSum / weightSum : 0;

        // Display result
        calculateGradeLabel.setText(String.format("Overall Average: %.2f%%", overallAverage));

        String status;
        if (overallAverage >= 90) status = "Excellent";
        else if (overallAverage >= 80) status = "Very Good";
        else if (overallAverage >= 75) status = "Satisfactory";
        else status = "Needs Improvement";

        // Optionally, display detailed results in a dialog
        StringBuilder resultDetails = new StringBuilder("Assessment Results:\n\n");
        for (int i = 0; i < categoryCount; i++) {
            if (categoryMaxTotals[i] > 0) {
                String categoryLabel = "Category " + (i + 1);
                if (i < assessmentTypes.length) {
                    categoryLabel = assessmentTypes[i];
                }
                resultDetails.append(String.format("%s: %.1f / %.1f (%.2f%%)\n", 
                    categoryLabel, categoryTotals[i], categoryMaxTotals[i], categoryPercentages[i]));
            }
        }
        resultDetails.append(String.format("\nOverall Weighted Average: %.2f%%\nStatus: %s", overallAverage, status));
        
        JOptionPane.showMessageDialog(this, resultDetails.toString(), "Assessment Result", JOptionPane.INFORMATION_MESSAGE);

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error calculating average: " + ex.getMessage(), "Calculation Error", JOptionPane.ERROR_MESSAGE);
    }
}
    private void loadGrades() {
    try {
        // Get the userId and gradeLevel from GlobalClass
        int userId = GlobalClass.userId;
        String gradeLevel = GlobalClass.gradeLevel;

        // Validate presence of user ID and grade level
        if (userId == 0) {
            JOptionPane.showMessageDialog(this, "User ID not set. Please log in.");
            this.setVisible(false); // Hide the current window (optional)
            LogIn loginFrame = new LogIn(); // Create the login frame
            loginFrame.setVisible(true); // Show the login frame
            return;
        }
        
        if (gradeLevel == null || gradeLevel.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Grade level not set. Please select a grade level.");
            return;
        }

        // Get a connection to the database
        Connection con = DatabaseConnection.getAceDatabaseConnection();

        // Query to select grades for the specific user and grade level
        String sql = "SELECT * FROM grades WHERE user_id = ? AND grade_level = ?";
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setInt(1, userId);  // Set the userId parameter for the query
        pst.setString(2, gradeLevel);  // Set the gradeLevel parameter for the query
        ResultSet rs = pst.executeQuery();

        // Get the table model
        DefaultTableModel model = (DefaultTableModel) progressTable.getModel();
        model.setRowCount(0); // Clear existing rows to avoid duplicates

        // Iterate through the result set and populate the table
        while (rs.next()) {
            String subject = rs.getString("subject");
            double grade = rs.getDouble("grade");

            // Check if the subject already exists in the table
            boolean subjectExists = false;
            for (int i = 0; i < model.getRowCount(); i++) {
                String tableSubject = model.getValueAt(i, 0).toString();  // assuming subject is in column 0
                if (tableSubject.equalsIgnoreCase(subject)) {
                    // Update the existing row with the new grade
                    model.setValueAt(grade, i, 1);  // assuming grade is in column 1
                    subjectExists = true;
                    break;  // Exit the loop since we found the subject
                }
            }

            // If the subject does not exist, add a new row
            if (!subjectExists) {
                model.addRow(new Object[]{subject, grade}); // Add new row for the subject and grade
            }
        }

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error loading grades: " + e.getMessage());
    }
}



        private void clearData() {
        int confirm = JOptionPane.showConfirmDialog(this, 
            "Are you sure you want to delete all data for the current user?", "Confirm Delete", JOptionPane.YES_NO_OPTION);

        if (confirm != JOptionPane.YES_OPTION) {
            return; // User cancelled
        }

        Connection con = null;
        PreparedStatement pst = null;

        try {
            // Get the userId from GlobalClass
            int userId = GlobalClass.userId;

            // Validate presence of user ID
            if (userId == 0) {
                JOptionPane.showMessageDialog(this, "User ID not set. Please log in.");
                this.setVisible(false); // Hide the current window (optional)
                LogIn loginFrame = new LogIn(); // Create the login frame
                loginFrame.setVisible(true); // Show the login frame
                return;
               
            }

            // Establish a connection to the database
            con = DatabaseConnection.getAceDatabaseConnection();
            if (con == null) {
                JOptionPane.showMessageDialog(this, "Database connection failed.");
                return;
            }

            // Delete all records for the current user (filter by user_id)
            String sql = "DELETE FROM grades WHERE user_id = ?";
            pst = con.prepareStatement(sql);
            pst.setInt(1, userId);  // Set the userId parameter for the query

            int rowsDeleted = pst.executeUpdate();

            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(this, rowsDeleted + " rows deleted successfully for user ID: " + userId);
            } else {
                JOptionPane.showMessageDialog(this, "No data found for the current user.");
            }

            // Optionally, clear UI table model or other components after deletion
            DefaultTableModel model = (DefaultTableModel) progressTable.getModel();
            model.setRowCount(0); // Clear the table

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error deleting data: " + ex.getMessage());
        } finally {
            try {
                if (pst != null) pst.close();
                if (con != null) con.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }


    

    
    private int parseIntSafe(Object value) {
    try {
        return Integer.parseInt(value.toString());
    } catch (Exception e) {
        return 0;
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GRADE9.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GRADE9.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GRADE9.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GRADE9.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GRADE9().setVisible(true);      
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CLEAR;
    private javax.swing.JButton CLEARDATA;
    private javax.swing.JPanel DL;
    private javax.swing.JTextField DLA;
    private javax.swing.JTextField GWA;
    private javax.swing.JButton GWAB;
    private javax.swing.JButton GWAB1;
    private javax.swing.JButton LOAD;
    private javax.swing.JButton LOGOUT;
    private javax.swing.JTextField PGWA;
    private javax.swing.JButton SAVE;
    private javax.swing.JLabel SUB;
    private javax.swing.JTextField TGWA;
    private javax.swing.JComboBox<String> VALED;
    private javax.swing.JButton addRowButton;
    private javax.swing.JTable assessmentTable;
    private javax.swing.JLabel btnFinalpage;
    private javax.swing.JLabel btnHidemenu;
    private javax.swing.JLabel btnHomepage;
    private javax.swing.JLabel btnInputpage;
    private javax.swing.JLabel btnProgresspage;
    private javax.swing.JPanel buttonPanel2;
    private javax.swing.JPanel buttons;
    private javax.swing.JButton calculateButton;
    private javax.swing.JLabel calculateGradeLabel;
    private javax.swing.JPanel content;
    private javax.swing.JButton create;
    private javax.swing.JPanel dashboard;
    private javax.swing.JButton delete;
    private javax.swing.JPanel finalpage;
    private javax.swing.JPanel finalpageScreen;
    private javax.swing.JPanel hidemenu;
    private javax.swing.JPanel homepage;
    private javax.swing.JPanel homepageScreen;
    private javax.swing.JPanel inputpage;
    private javax.swing.JPanel inputpageScreen;
    private javax.swing.JPanel inputscreen2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea10;
    private javax.swing.JTextArea jTextArea11;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea7;
    private javax.swing.JTextArea jTextArea8;
    private javax.swing.JTextArea jTextArea9;
    private javax.swing.JPanel mainPanel2;
    private javax.swing.JPanel menu;
    private javax.swing.JPanel menuHide;
    private javax.swing.JPanel menuIcon;
    private javax.swing.JLabel menuSub1;
    private javax.swing.JLabel menuSub10;
    private javax.swing.JLabel menuSub11;
    private javax.swing.JLabel menuSub2;
    private javax.swing.JLabel menuSub3;
    private javax.swing.JLabel menuSub4;
    private javax.swing.JLabel menuSub5;
    private javax.swing.JLabel menuSub6;
    private javax.swing.JLabel menuSub7;
    private javax.swing.JLabel menuSub8;
    private javax.swing.JLabel menuSub9;
    private javax.swing.JPanel pfp;
    private javax.swing.JPanel pie;
    private javax.swing.JTable progressTable;
    private javax.swing.JTable progressTable2;
    private javax.swing.JPanel progresspage;
    private javax.swing.JPanel progresspageScreen;
    private javax.swing.JPanel separator;
    private javax.swing.JPanel sub0;
    private javax.swing.JPanel sub1;
    private javax.swing.JPanel sub10;
    private javax.swing.JPanel sub12;
    private javax.swing.JPanel sub2;
    private javax.swing.JPanel sub3;
    private javax.swing.JPanel sub4;
    private javax.swing.JPanel sub5;
    private javax.swing.JPanel sub6;
    private javax.swing.JPanel sub7;
    private javax.swing.JPanel sub8;
    private javax.swing.JPanel sub9;
    private javax.swing.JComboBox<String> subjectComboBox;
    // End of variables declaration//GEN-END:variables
}
